#!/usr/bin/make -f

include debian/versions

packages_arch = binutils gdb gcc
packages_indep = newlib
packages_all = $(packages_arch) $(packages_indep)
TARGET = $(shell cat debian/target)

version = $(shell dpkg-parsechangelog --count 1 | grep ^Version: | cut -c 10-)

src = $*-$($*_version)
pak = $*-$(TARGET)
pakvers = $($*_version)-$(version)

# FIXME support c++ and other languages
langs = c

# FIXME other than ARM?
multilibs = armv6-m,armv7-m,armv7e-m,armv7-r,armv7-a

%-bootstrap-stamp: src = bootstrap-src
%-bootstrap-stamp: pak = bootstrap-toolchain-$(TARGET)
%-bootstrap-stamp: pakvers = $(version)
%-bootstrap-stamp: langs = c
%-gcc-stamp: pak = gcc-$(gcc_vers)-$(TARGET)
dhflags = --parallel -S autoconf -D $(src) -B build-$(src)-$(TARGET) -p$(pak)

cfflags = --prefix=/usr --target=$(TARGET) \
    --enable-multiarch --with-system-zlib --disable-rpath \
    --enable-plugins --enable-lto --with-gnu-as --with-gnu-ld \
    --with-dwarf2 --enable-gold \
    --enable-decimal-float=yes --enable-fixed-point \
    --disable-newlib-supplied-syscalls \
    --with-multilib-list=$(multilibs) \
    --enable-languages=$(langs)

nostrip = usr/$(TARGET)/lib crtbegin.o crtend.o crti.o crtn.o libgcc.a libgcov.a

pwd = $(shell pwd)
every = $(patsubst %,$(2)-%-stamp,$(packages_$(1)))

.PHONY: verify
verify: verify-stamp
verify-stamp:
	md5sum -c debian/tars.md5
	touch $@

.PHONY: clean
clean:
	dh_testdir
	rm -rf $(addsuffix -*/,$(packages_all)) bootstrap-src/ build-*/
	dh_clean

.PHONY: unpack
unpack: $(call every,all,unpack)
unpack-%-stamp: verify-stamp $($*_tar)
	dh_testdir
	tar -x -f $($*_tar)
	touch $@

unpack-bootstrap-stamp: $(newlib_tar) $(binutils_tar) $(gcc_tar)
	dh_testdir
	mkdir -p $(src)
	cd $(src) && tar -x --strip-components=1 -f ../$(newlib_tar)
	cd $(src) && tar -x --strip-components=1 -f ../$(binutils_tar)
	cd $(src) && tar -x --strip-components=1 -f ../$(gcc_tar)
	touch $@

.PHONY: patch
patch: $(call every,all,patch)
patch-%-stamp: patches/series-% unpack-%-stamp
	dh_testdir
	cd $(src) && QUILT_PATCHES=../patches/ QUILT_SERIES=series-$* quilt --quiltrc /dev/null push -a
	touch $@
patch-%-stamp: unpack-%-stamp
	dh_testdir
	@echo No patches for $*
	touch $@

patch-bootstrap-stamp: unpack-bootstrap-stamp
	dh_testdir
	echo > $(src)/series
	if [ -f patches/series-binutils ]; then cat patches/series-binutils >> $(src)/series; fi
	if [ -f patches/series-gcc ]; then cat patches/series-gcc >> $(src)/series; fi
	if [ -f patches/series-newlib ]; then cat patches/series-newlib >> $(src)/series; fi
	cd $(src) && QUILT_PATCHES=../patches/ quilt --quiltrc /dev/null push -a
	touch $@

.PHONY: build build-arch build-indep build-bootstrap
build: build-arch build-indep
build-indep: $(call every,indep,build)
build-arch: $(call every,arch,build)
build-bootstrap: build-bootstrap-stamp

configure-%-stamp: patch-%-stamp
	dh_testdir
	dh_auto_configure $(dhflags) -- $(cfflags)
	touch $@

build-%-stamp: configure-%-stamp
	dh_testdir
	dh_auto_build $(dhflags)
	touch $@

.PHONY: install install-arch install-indep install-bootstrap
install: install-arch install-indep
install-indep: $(call every,indep,install)
install-arch: $(call every,arch,install)
install-bootstrap: install-bootstrap-stamp

install-%-stamp: build-%-stamp
	dh_testdir
	dh_testroot
	cd build-$(src)-$(TARGET) && make install DESTDIR=$(pwd)/debian/$(pak)
	rm build-$*-stamp
	cd debian/$(pak) && (find . -type f | grep -v $(TARGET) | xargs rm)
	touch $@

.PHONY: binary binary-arch binary-indep binary-bootstrap
binary: binary-arch binary-indep
binary-indep: $(call every,indep,binary)
binary-arch: $(call every,arch,binary)
binary-bootstrap: binary-bootstrap-stamp

binary-%-stamp: install-%-stamp
	dh_testdir
	dh_testroot
	dh_link -p$(pak)
	dh_strip -p$(pak) $(addprefix -X,$(nostrip))
	dh_fixperms -p$(pak)
	dh_compress -p$(pak)
	dh_makeshlibs -p$(pak)
	dh_shlibdeps -p$(pak)
	dh_installdeb -p$(pak)
	dh_gencontrol -p$(pak) -- -v$(pakvers)
	dh_md5sums -p$(pak)
	dh_builddeb -p$(pak)
	touch $@

.PHONY: bootstrap
bootstrap: binary-bootstrap

